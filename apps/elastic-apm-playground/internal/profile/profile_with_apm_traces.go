package profile

// Code generated by gowrap. DO NOT EDIT.
// template: ../../templates/elastic_apm
// gowrap: http://github.com/hexdigest/gowrap

//go:generate gowrap gen -p github.com/gvencadze/apm-playground/internal/profile -i IProfile -t ../../templates/elastic_apm -o profile_with_apm_traces.go -l ""

import (
	"context"

	"github.com/gvencadze/apm-playground/internal/profile/model"
	"go.elastic.co/apm/v2"
)

// IProfileWithTracing implements IProfile interface instrumented with opentracing spans
type IProfileWithTracing struct {
	IProfile
	_spanType string
}

// NewIProfileWithTracing returns IProfileWithTracing
func NewIProfileWithTracing(base IProfile, spanType string) IProfileWithTracing {
	return IProfileWithTracing{
		IProfile:  base,
		_spanType: spanType,
	}
}

// Get implements IProfile
func (_d IProfileWithTracing) Get(ctx context.Context, id int) (pp1 *model.Profile, err error) {
	span, spanCtx := apm.StartSpan(ctx, "IProfile.Get", _d._spanType)
	defer func() {
		if err != nil {
			apm.CaptureError(spanCtx, err).Send()
		}

		span.End()
	}()
	return _d.IProfile.Get(ctx, id)
}
